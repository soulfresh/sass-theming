@import 'theme';

$speed-count: 0;
@each $name in $palette-speed {
  $speed-count: $speed-count + 1;
}

$ease-count: 0;
@each $name in $palette-ease {
  $ease-count: $ease-count + 1;
}

$anim-pad: size(xs);
$anim-size: font-size(m);
$data-size: font-size(xs);

.sfAnimationSpeed,
.sfAnimationEasing {
  font-family: font-family(body);

  .sfDescription {
    color: foreground(disabled-text);
    margin-bottom: size(m);
    text-align: center;
  }
}

.sfAnimationItem {
  height: $anim-pad * 2 + $anim-size + $data-size + size(xs);
  position: relative;
  margin-bottom: size(xs);
  border-bottom: 1px solid foreground(divider);

  &:after {
    position: absolute;
    bottom: 0;
    color: foreground(disabled-text);
    font-size: $data-size;
    padding-bottom: size(xxxs);
  }

  .anim {
    @include flex-centered;
    position: absolute;
    left: 0;

    @include unstyled-button;
    cursor: pointer;
    border-radius: radius(s);
    color: foreground-dark();
    background-color: color(primary);

    font-family: font-family(body);

    padding: $anim-pad;
    font-size: $anim-size;
  }

  &.active {
    .anim {
      left: 100%;
      transform: translateX(-100%);
    }
  }
}

.sfAnimationEasing {
  $i: 0;
  @each $name, $value in $palette-ease {
    .#{$name} {
      .anim {
        transition: left speed(m) $value, transform speed(m) $value;
      }

      &:after {
        content: '#{$name}: #{$value}';
      }
    }
    $i: $i + 1;
  }
}

.sfAnimationSpeed {
  $i: 0;
  @each $name, $value in $palette-speed {
    .#{$name} {
      .anim {
        transition: left $value linear, transform $value linear;
      }

      &:after {
        content: '#{$name}: #{$value}';
      }
    }
    $i: $i + 1;
  }
}

